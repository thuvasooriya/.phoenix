# prompt config
###############
format = """
[⎧](bold white) [to the stars   ](bold yellow)\
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$vcsh\
$pijul_channel\
$docker_context\
$package\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$golang\
$guix_shell\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$vlang\
$vagrant\
$zig\
$bun\
$nix_shell\
$conda\
$meson\
$spack\
$memory_usage\
$aws\
$gcloud\
$openstack\
$azure\
$env_var\
$crystal\
$custom\
$sudo\
$line_break\
[⎪ ](bold white)\
$directory\
$fossil_branch\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$jobs\
$battery\
$os\
$container\
$shell\
$line_break\
[⎩ ](bold white)$character\
"""

right_format = """
$status\
$cmd_duration
"""

# continuation_prompt = '▶▶ '
add_newline = true
scan_timeout = 10

# Set 'foo' as custom color palette
# palette = 'foo'

# Define custom colors
# [palettes.foo]
# Overwrite existing color
# blue = '21'
# Define new color
# mustard = '#af8700'


[character]
# success_symbol = "[󰛂](bold green)"
# success_symbol = "[󰳟](bold green)"
# success_symbol = "[](bold green)"
# success_symbol = "[󰧂](bold green)"
success_symbol = "[](bold green)"
# success_symbol = "[](bold green)"
# success_symbol = "[󰋇](bold green)"
# success_symbol = "[󰫢](bold green)"
# success_symbol = "[󰫤](bold green)"
# success_symbol = "[󰘳](bold green)"
error_symbol = "[󰫤](bold red)"

[cmd_duration]
# format = "took [ $duration]($style)"
format = "[took](dimmed italic) [󱎫 $duration]($style)"
min_time = 1000
show_notifications = true
# show_milliseconds = false
min_time_to_notify = 300000

[status]
# map_symbol = true
disabled = false
format = '[$common_meaning \[$status\] ]($style)'
recognize_signal_code = true

[time]
disabled = false
format = '[at](dimmed italic) [$time](green) '
time_format = '%T'
# utc_time_offset = '+5'
# time_range = '10:00:00-14:00:00'

[shell]
unknown_indicator = "mystery shell" # The default value to be displayed when the shell is unknown.
disabled = true
# zsh_indicator
# powershell_indicator
# ion_indicator
# elvish_indicator
# tcsh_indicator
# format

[directory]
read_only = " "
truncation_length = 2                                                           # The number of parent folders that the current directory should be truncated to.
truncate_to_repo = false                                                        # Whether or not to truncate to the root of the git repo that you're currently in.
style = "bold blue"
format = "[from](dimmed) [$symbol$path]($style)[$read_only]($read_only_style) "
truncation_symbol = " "                                                        # The symbol to prefix to truncated paths. eg: "…/"
home_symbol = " "                                                              # The symbol indicating home directory.
# disabled 	false 	Disables the directory module.
# read_only_style 	"red" 	The style for the read only symbol.

# git stuff
###########
[git_branch]
format = '[󰁥 $branch$symbol]($style) '
symbol = " "
# truncation_length = 4
# truncation_symbol = ""
# truncation_length 	2^63 - 1 	Truncates a git branch to N graphemes.
# truncation_symbol 	"…" 	The symbol used to indicate a branch name was truncated. You can use "" for no symbol.
# only_attached 	false 	Only show the branch name when not in a detached HEAD state.
# Variables
# Variable 	Example 	Description
# branch 	master 	The current branch name, falls back to HEAD if there's no current branch (e.g. git detached HEAD).
# remote_name 	origin 	The remote name.
# remote_branch 	master 	The name of the branch tracked on remote_name.
# symbol 		Mirrors the value of option symbol
# style* 		Mirrors the value of option style

[git_status]
format = '[$conflicted$diverged$deleted$modified](red)[$staged$renamed$ahead_behind](white)'
conflicted = "󱚟 "
ahead = " "
behind = " "
diverged = " "
up_to_date = "󰫢 "
stashed = " "
deleted = " "
untracked = " "
staged = " "
modified = " "
renamed = " "
# style = 'dimmed red'

[python]
format = '[via](dimmed) [${symbol}${pyenv_prefix}(${version}) $virtualenv ]($style)'
version_format = "v${minor}.${patch}"
style = "bold green"
symbol = " "
# pyenv_version_name=true	# Use pyenv to get Python version
# pyenv_prefix=""	#Prefix before pyenv version display, only used if pyenv is used
python_binary = [
    "python",
    "python3",
] #Configures the python binaries that Starship should executes when getting the version.
detect_extensions = ["py"] #Which extensions should trigger this module
detect_files = [
    ".python-version",
    "Pipfile",
    "__init__.py",
    "pyproject.toml",
    "requirements.txt",
    "setup.py",
    "tox.ini",
] #Which filenames should trigger this module
detect_folders = ["/Users/tony/Documents/mastrange/pydev"]

[nodejs]
format = "[via $symbol($version) ]($style)"
version_format = "v${major}"                # The version format. Available vars are raw, major, minor, & patch
# symbol = "󰎙 "                              # A format string representing the symbol of Node.js.
# detect_extensions =	["js", "mjs", "cjs", "ts"] 	# Which extensions should trigger this module.
detect_files = [".node-version"]  # Which filenames should trigger this module.
detect_folders = ["node_modules"] # Which folders should trigger this module.
style = "bold green"              # The style for the module.
disabled = true                   # Disables the nodejs module.
not_capable_style = "bold red"    # The style for the module when an engines property in package.json does not match the Node.js version.

[bun]
symbol = " "
style = "bold yellow"
format = "[via](dimmed) [$symbol($version) ]($style)"
version_format = "v${major}.${minor}"

[zig]
format = "[via](dimmed) [$symbol($version) ]($style)"
version_format = "v${major}.${minor}"
symbol = " "

[package]
symbol = "󰏖 "
disabled = true

[c]
symbol = " "

[conda]
symbol = " "

[dart]
symbol = " "

[docker_context]
symbol = " "

[aws]
symbol = "  "

[buf]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[golang]
symbol = " "

[guix_shell]
symbol = " "

[haskell]
symbol = " "

[haxe]
symbol = "⌘ "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[lua]
symbol = " "

[nix_shell]
symbol = " "

[os.symbols]
Alpine = " "
Amazon = " "
Android = " "
Arch = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "﯑ "
Gentoo = " "
HardenedBSD = "ﲊ "
Illumos = " "
Linux = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = " "
openSUSE = " "
OracleLinux = " "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
Redox = " "
Solus = "ﴱ "
SUSE = " "
Ubuntu = " "
Unknown = " "
Windows = " "

[rlang]
symbol = "ﳒ "

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[spack]
symbol = "🅢 "

# symbol dump
#############

# ╭────╮
# │test│
# ╰────╯
# ╭──────╮
# │ test │
# ╰──────╯
